#include "modifier.h"

Modifiers::Modifiers()
{
    _modifiers.push_back({ "Ablative",                             Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Affected As Another Sense",            Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Affected As More Than One Sense",      Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Affects Desolid",                      Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Affects Physical World",               Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Allocatable▲",                         Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Alterable Origin Pointt",              Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Alterable Size",                       Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Alternate Combat Value▲",              Modifier::isBoth,       Modifier::isModifier });
    _modifiers.push_back({ "Always On",                            Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Area Of Effect",                       Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Armor Piercing",                       Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Attack Versus Alternate Defense",      Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Autofire",                             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Backlash",                             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Based on CON",                         Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Beam",                                 Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "BODY Only",                            Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Can Apply/Remove Adders",              Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Can be Deflected/Reflected",           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Can Be Dispelled",                     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Can Heal Limbs",                       Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Can Only Be Used Through Mind Link",   Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Cannot Be Escaped With Teleportation", Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Cannot Be Used Through Mind Link",     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Cannot Be Used With ...",              Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Cannot Use Targetting",                Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Charges",                              Modifier::isBoth,       Modifier::isModifier });
    _modifiers.push_back({ "Combat Acceleration/Decelleration",    Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Concentration",                        Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Constant",                             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Costs Endurance",                      Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Costs Endurance Only To Activate▲",    Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Costs Endurance To Maintain",          Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Cumulative▲",                          Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Damage Over Time▲",                    Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Decreased Acceleration/Decelleration", Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Delayed EffectꚚ",                      Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Delayed Fade/Return Rate▲",            Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Difficult To Dispel",                  Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Dimissable▲",                          Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Divided Effect",                       Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Does BODYϴ",                           Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Does Knockback",                       Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Doesn't Work On Damage ...",           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Does Work While Duplicate Exists",     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Double Knockback",                     Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Expanded Effect▲",                     Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Extra Time",                           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Eye Contact Required",                 Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Focus",                                Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Gestures",                             Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Hardened",                             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Hole In The Middle",                   Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Impenetrable",                         Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Improved Noncombat Movement",          Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Inaccurate",                           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Incantations",                         Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Increased Endurance Cost",             Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Increased Mass",                       Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Increased Maximum Effect",             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Increased Maximum Range",              Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Indirect",                             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Inherent",                             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Instant",                              Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Invisible Power Effects",              Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Limited Arc Of Fire",                  Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Limited Coverage",                     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Limited Effect",                       Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Limited Maneuverability",              Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Limited Power",                        Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Limited Range",                        Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Limited Special Effect",               Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Line Of Sight▲",                       Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Linked",                               Modifier::isBoth,       Modifier::isModifier });
    _modifiers.push_back({ "Lockout",                              Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Mandatory Effect",                     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "MassꚚ",                                Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Megascaleϴ",                           Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Mental Defense Adds To EGO",           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "No Concious Control▲",                 Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "No Gravity Penalty",                   Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "No Knockback",                         Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "No Noncombat Movement",                Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "No Range",                             Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "No Turn Mode▲",                        Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Noncombat Acceleration/Decelleration", Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Nonpersistant",                        Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Nonresistant Defenses",                Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "One Use At A Time",                    Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Only In Alternate Identity",           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Only Protects Barrier",                Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Only Restores To Starting Values",     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Only Works AGainst ...",               Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Opaque",                               Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Partial Cpverage",                     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Perceivable",                          Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Persistent",                           Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Personal Immunity",                    Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Physical Manifestation",               Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Position Shift",                       Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Range Based On STR",                   Modifier::isBoth,       Modifier::isModifier });
    _modifiers.push_back({ "Ranged",                               Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Rapid Noncombat Movement",             Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Real Armor",                           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Reduced By Range",                     Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Reduced By Shrinking",                 Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Reduced Endurance",                    Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Reduced Negation",                     Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Reduced Penetration",                  Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Reduced Range Modifier",               Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Required HandsꚚ",                      Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Requires A Roll",                      Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Requires Multiple Charges",            Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Requires Multiple Users",              Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Resistant",                            Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Restrainable",                         Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Resurrectionϴ",                        Modifier::isAdvantage,  Modifier::isAdder });
    _modifiers.push_back({ "Resurrection Only",                    Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Safe Blind Travel",                    Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Side Effects",                         Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Skin Contact Required",                Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Standard Range",                       Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Sticky",                               Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Stops Working If Knocked Out/Stunned", Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "STR MinimumꚚ",                         Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "STUN Only",                            Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Subject To Range Modifier",            Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Time Limit",                           Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Transdiemensionalϴ",                   Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Trigger",                              Modifier::isBoth,       Modifier::isModifier });
    _modifiers.push_back({ "Unified Power▲",                       Modifier::isLimitation, Modifier::isModifier });
    _modifiers.push_back({ "Usable As ...",                        Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Usable On Others",                     Modifier::isBoth,       Modifier::isModifier });
    _modifiers.push_back({ "Variabble Advantageϴ",                 Modifier::isAdvantage,  Modifier::isModifier });
    _modifiers.push_back({ "Variable Effect▲",                     Modifier::isAdvantage,  Modifier::isModifier });
}

// ▲ϴꚚϟ
