#ifndef VULNERABILITY_H
#define VULNERABILITY_H

#include "complication.h"
#include "fraction.h"

class Vulnerability: public Complication
{
public:
    Vulnerability(): Complication() { }
    Vulnerability(const Vulnerability& ac)
        : Complication()
        , v(ac.v) { }
    Vulnerability(Vulnerability&& ac)
        : Complication()
        , v(ac.v) { }
    Vulnerability(const QJsonObject& json)
        : Complication()
        , v { json["attack"].toInt(0), json["effect"].toBool(false), json["what"].toString("") } { }

    Vulnerability& operator=(const Vulnerability& ac) {
        if (this != &ac) v = ac.v;
        return *this;
    }
    Vulnerability& operator=(Vulnerability&& ac) {
        v = ac.v;
        return *this;
    }

    QString description() override {
        static QList<QString> attk { "Uncommon", "Common", "Very Common" };
        if (v._attack < 0 ||  v._what.isEmpty()) return "<incomplete>";
        return QString("Vulnerability: %1 (%3, %2x Effect)").arg(v._what, v._effect ? "2" : Fraction(1, Fraction(1, 2)).toString(), attk[v._attack]);
    }
    void form(QWidget* parent, QVBoxLayout* layout) override {
        what   = createLineEdit(parent, layout, "What are you vulnerable to?");
        attack = createComboBox(parent, layout, "How common is the attack", { "Uncommmon", "Common", "Very Common" });
        effect = createCheckBox(parent, layout, "2x Effect");
    }
    Points<> points(bool noStore = false) override {
        if (!noStore) store();
        return (v._effect ? 2_cp : 1_cp) * (v._attack + 1) * 5_cp;
    }
    void restore() override {
        vars s = v;
        what->setText(s._what);
        attack->setCurrentIndex(s._attack);
        effect->setChecked(s._effect);
        v = s;
    }
    void store() override {
        v._what   = what->text();
        v._attack = attack->currentIndex();
        v._effect = effect->isChecked();
    }
    QJsonObject toJson() override {
        QJsonObject obj;
        obj["name"]   = "Vulnerability";
        obj["attack"] = v._attack;
        obj["effect"] = v._effect;
        obj["what"]   = v._what;
        return obj;
    }

private:
    struct vars {
    int     _attack = -1;
    int     _effect = false;
    QString _what = "";
    } v;

    QComboBox* attack;
    QCheckBox* effect;
    QLineEdit* what;
};

#endif // VULNERABILITY_H
